akka {
    loglevel = "INFO"

    actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        debug {
            receive = false
            autoreceive = false
            lifecycle = false
        }

        allow-java-serialization=on
        serializers {
        java = "akka.serialization.JavaSerializer"
    }

    serialization-bindings {
        "bankaccount.domain.Deposit" = java
        "bankaccount.domain.Withdraw" = java
        "bankaccount.domain.Deposited" = java
        "bankaccount.domain.Withdrawn" = java
        "bankaccount.domain.AccountState" = java
    }
}

remote {
    netty.tcp {
        hostname = "127.0.0.1"
        port = 2551
    }
}

cluster {
    seed-nodes = ["akka.tcp://accountApp@127.0.0.1:2551", "akka.tcp://accountApp@127.0.0.1:2552"]
    auto-down-unreachable-after = 1s
    use-dispatcher = cluster-dispatcher
    sharding {
        guardian-name = sharding
        remember-entities = on
        coordinator-failure-backoff = 5 s
        retry-interval = 2 s
        buffer-size = 100000
        handoff-timeout = 10 s
        shard-start-timeout = 10 s
        shard-failure-backoff = 10 s
        entity-restart-backoff = 10 s
        rebalance-interval = 10 s
        journal-plugin-id = "cassandra-journal"
        snapshot-plugin-id = "cassandra-snapshot-store"
        state-store-mode = "ddata"
        snapshot-after = 500
        least-shard-allocation-strategy {
            rebalance-threshold = 10
            max-simultaneous-rebalance = 3
        }
        waiting-for-state-timeout = 5 s
        updating-state-timeout = 5 s
    }
}

stream {
    materializer {
        debug-logging = on
        debug {
            fuzzing-mode = on
        }
    }
}

persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
}
}

cluster-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 2
        parallelism-max = 4
    }
}

actor-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 2
        parallelism-max = 4
    }
}

cassandra-journal {
    class = "akka.persistence.cassandra.journal.CassandraJournal"
    keyspace = "docker_dev"
    table = "message_journal"
    metadata-table = "cluster_metadata"
    config-table = "cluster_config"
    contact-points = ["127.0.0.1"]
    read-consistency = "LOCAL_QUORUM"
    write-consistency = "LOCAL_QUORUM"
}

cassandra-snapshot-store {
    class = "akka.persistence.cassandra.snapshot.CassandraSnapshotStore"
    keyspace = "docker_dev"
    table = "message_snapshots"
    metadata-table = "cluster_metadata"
    config-table = "cluster_config"
    contact-points = ["127.0.0.1"]
    read-consistency = "LOCAL_QUORUM"
    write-consistency = "LOCAL_QUORUM"
}
